// Copyright 2021 Rik Essenius
// 
//   Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
//   except in compliance with the License. You may obtain a copy of the License at
// 
//       http://www.apache.org/licenses/LICENSE-2.0
// 
//    Unless required by applicable law or agreed to in writing, software distributed under the License
//    is distributed on an "AS IS" BASIS WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and limitations under the License.

#ifndef HEADER_BATCHWRITER
#define HEADER_BATCHWRITER

#include "SerialDriver.h"

using byte = unsigned char;

class BatchWriter {
public:
    BatchWriter(long flushRate, char startSymbol);
    void setCanFlush(bool canFlush);
    virtual void flush();
    virtual char* getHeader();
    static unsigned int getCrc(const char* input);
    long getFlushRate();
    char* getMessage();
    virtual bool needsFlush(bool endOfFile = false);
    bool newMessage();
    virtual void prepareFlush();
    virtual void setDesiredFlushRate(long flushRate);
    long getDesiredFlushRate();
    void writeParam(const char* value);
    void writeParam(float value);
    void writeParam(int value);
    void writeParam(long value);

protected:
    long convertToLong(char* stringParam, long defaultValue, long min, long max);
    static unsigned short int crc16_update(unsigned short int crc, byte nextByte);
    bool _canFlush = false;
    long _desiredFlushRate;
    long _flushRate;
    bool _flushWaiting = false;
    virtual void resetCounters();

    char* toString(int number);
    char* toString(long number);
    char* toString(float input, unsigned char precision);

    static const int PRINT_BUFFER_SIZE = 250;
    static const int PRINT_BUFFER_MARGIN = 20;
    char _printBuffer[PRINT_BUFFER_SIZE];
    static const int NUMBER_BUFFER_SIZE = 16;
    char _numberBuffer[NUMBER_BUFFER_SIZE];
    char _startSymbol;
    long _messageCount;
    SerialDriver *_serialDriver;
};

#endif

//20 M,2258,16152,2258,1656,2267,1668,2267,1684,2269,1640,2269,1644,2269,1672,2279,1684,2265,1700,2265,1708,2253,1724,2265,1740,2267,1764,2263,1780,2274,1800,2277,1796,2279,1820,2265,1832,2269,1848,2260,1864,-32343
//18 M,2553,14308,2553,1664,2553,1660,2553,1672,2553,1640,2553,1656,2560,1668,2569,1672,2574,1680,2553,1712,2558,1724,2560,1744,2565,1756,2553,1768,2572,1788,2558,1808,2569,1828,2563,1836,-17236

//15 M,2301,11492,2301,1664,2301,1660,2296,1672,2298,1628,2306,1652,2303,1668,2296,1672,2303,1688,2301,1712,2296,1732,2303,1744,2301,1752,2288,1784,2293,1792,-17045
//14 M,2034,10420,2039,1676,2026,1656,2026,1612,2031,1628,2029,1644,2034,1660,2022,1688,2024,1688,2036,1708,2036,1720,2036,1736,2045,1756,2039,1772,-27866
//13 M,2310,9456,2331,1644,2329,1588,2307,1608,2320,1632,2312,1644,2336,1664,2306,1668,2326,1696,2306,1712,2310,1728,2317,1736,2329,1760,-16375
//12 M,2029,8480,2034,1644,2031,1612,2026,1620,2034,1628,2041,1636,2036,1664,2024,1684,2050,1696,2034,1712,2039,1724,2024,1748,-14624
//11 M,2050,7324,2045,1652,2043,1596,2048,1616,2041,1632,2063,1652,2053,1660,2043,1688,2055,1684,2045,1716,2058,1724,-25564
//10 M,2269,6444,2272,1644,2267,1608,2284,1616,2291,1624,2274,1640,2272,1664,2265,1676,2269,1680,2282,1716,17498
//9  M,2053,5576,2055,1604,2064,1604,2060,1608,2063,1632,2072,1648,2063,1660,2063,1680,2050,1684,-27989
//8  M,2329,4620,2307,1572,2298,1596,2310,1620,2312,1628,2306,1644,2306,1652,2301,1680,-21797
//7  M,2064,3540,2064,1580,2058,1604,2072,1628,2041,1636,2053,1648,2063,1656,-32077
//6  M,2053,2788,2053,1588,2060,1612,2053,1612,2050,1632,2053,1648,-11000
//5  M,2267,2596,2282,1584,2272,1596,2277,1616,2263,1640,-25852
//4  M,2312,2456,2315,1584,2307,1604,2310,1624,17182
//3  M,2031,2276,2034,1576,2031,1600,-25268
//2  M,2322,2108,2317,1596,-7213
//1  M,2315,1924,-16673

/*
M,1691,10524,1691,1664,1683,1660,1705,1612,1672,1636,1683,1648,1688,1676,1674,1672,1658,1696,1659,1708,1667,1728,1658,1744,1658,1744,1659,1768,-17805
NeedsFlush: New flush rate:100
M,1658,10516,1658,1672,1653,1660,1638,1624,1643,1632,1640,1640,1645,1652,1640,1680,1636,2008,1619,1716,1631,1724,1658,1752,1645,1752,1640,1776,4490
I,M,14,S,100
M,1638,10332,1638,1672,1634,1680,1631,1604,1636,1652,1624,1652,1638,1668,1636,1688,1631,1700,1658,2072,1634,1728,1631,1748,1636,1764,1634,1776,14692
M,1626,10440,1631,1652,1621,1656,1629,1624,1629,1636,1638,1656,1640,1664,1634,1680,1629,1700,1629,1712,1638,1736,1638,1732,1640,1756,1629,1772,20852
M,1634,10432,1634,1668,1631,1668,1626,1616,1631,1628,1636,1644,1643,1668,1631,1688,1619,1700,1612,1696,1626,1728,1626,1740,1634,1764,1638,1772,31298
M,1643,10440,1624,1664,1624,1660,1643,1608,1638,1636,1653,1656,1643,1668,1643,1676,1645,1708,1634,1716,1631,1728,1631,1744,1621,1756,1634,1772,25626
ResetCounters: New flush rate:6000
S,4700,0,0,0,1639.05,1640.63,5.17,0,62,62,2318,336,24397
M,1658,10424,1658,1656,1636,1668,1645,1616,1640,5724,1619,1676,1621,1660,1638,1680,1634,1700,1638,1708,1636,1716,1643,1740,1638,1764,1638,1776,29560

M,1636,2608,1648,1596,1643,1592,1640,1628,1638,1644,-4690
M,1624,2604,1638,1572,1631,1596,1640,1612,1643,1632,23618
M,1634,2600,1631,1580,1638,1604,1634,1620,1638,1636,-30457
M,1629,2620,1636,1596,1638,1604,1643,1616,1629,1624,-5219
S,6000,0,0,0,1637.32,1638.77,3.53,0,0,0,1808,0,-29589
M,1645,2600,1643,3536,1636,1604,1648,1608,1638,1620,-10212
M,1631,2628,1636,1584,1634,1600,1650,1620,1655,1632,4598
M,1648,2588,1659,1596,1638,1588,1636,1628,1634,1632,1994
M,1638,2592,1634,1584,1626,1604,1645,1616,1643,1636,28962
M,1638,2600,1631,1584,1634,1604,1638,1620,1638,1620,-13781
*/


